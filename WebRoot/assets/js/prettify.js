




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>bootstrap-wysihtml5/lib/js/prettify.js at master · jhollingworth/bootstrap-wysihtml5 · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="jhollingworth/bootstrap-wysihtml5" name="twitter:title" /><meta content="bootstrap-wysihtml5 - Simple, beautiful wysiwyg editor" name="twitter:description" /><meta content="https://1.gravatar.com/avatar/bd5217f0c19397986b1f8cb9f2fdb370?d=https%3A%2F%2Fidenticons.github.com%2Fbfefd122c091053c0cfd75c9196070e5.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://1.gravatar.com/avatar/bd5217f0c19397986b1f8cb9f2fdb370?d=https%3A%2F%2Fidenticons.github.com%2Fbfefd122c091053c0cfd75c9196070e5.png&amp;r=x&amp;s=400" property="og:image" /><meta content="jhollingworth/bootstrap-wysihtml5" property="og:title" /><meta content="https://github.com/jhollingworth/bootstrap-wysihtml5" property="og:url" /><meta content="bootstrap-wysihtml5 - Simple, beautiful wysiwyg editor" property="og:description" />

    <meta name="hostname" content="github-fe135-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="DDDA9EA8:1E87:2D1F31E:531B2AA1" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="jA2grMuRX3eI7xJQy9vTMaq+B7QOjE5aSosmkAFt35A=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-d648f1196659f589579aa6aaddcc78c4f8e87552.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-32987ede34015d8eaa4618614894d836adf201f6.css" media="all" rel="stylesheet" type="text/css" />
    
    


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-855d68c505f4b08a77e4d991f11cf5d8f43250e2.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-e6bd35a239a3a0ab82cd42cd9df317778e5a1270.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="2fe0694ce2393a8db660e33f758021ee">

        <link data-pjax-transient rel='permalink' href='/jhollingworth/bootstrap-wysihtml5/blob/283bb8f859977ac1aafb09bee715a1190f8cfd1b/lib/js/prettify.js'>

  <meta name="description" content="bootstrap-wysihtml5 - Simple, beautiful wysiwyg editor" />

  <meta content="151172" name="octolytics-dimension-user_id" /><meta content="jhollingworth" name="octolytics-dimension-user_login" /><meta content="3769419" name="octolytics-dimension-repository_id" /><meta content="jhollingworth/bootstrap-wysihtml5" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="3769419" name="octolytics-dimension-repository_network_root_id" /><meta content="jhollingworth/bootstrap-wysihtml5" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/jhollingworth/bootstrap-wysihtml5/commits/master.atom" rel="alternate" title="Recent Commits to bootstrap-wysihtml5:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production windows vis-public page-blob tipsy-tooltips">
    <a href="#start-of-content" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fjhollingworth%2Fbootstrap-wysihtml5%2Fblob%2Fmaster%2Flib%2Fjs%2Fprettify.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="jhollingworth/bootstrap-wysihtml5"
      data-branch="master"
      data-sha="a91ed1ae943cedab916999ef05c4295a8404f1ae"
  >

    <input type="hidden" name="nwo" value="jhollingworth/bootstrap-wysihtml5" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
    <a href="/login?return_to=%2Fjhollingworth%2Fbootstrap-wysihtml5"
    class="minibutton with-count js-toggler-target star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>Star
  </a>

    <a class="social-count js-social-count" href="/jhollingworth/bootstrap-wysihtml5/stargazers">
      3,535
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fjhollingworth%2Fbootstrap-wysihtml5"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/jhollingworth/bootstrap-wysihtml5/network" class="social-count">
        767
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/jhollingworth" class="url fn" itemprop="url" rel="author"><span itemprop="title">jhollingworth</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/jhollingworth/bootstrap-wysihtml5" class="js-current-repository js-repo-home-link">bootstrap-wysihtml5</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/jhollingworth/bootstrap-wysihtml5" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /jhollingworth/bootstrap-wysihtml5">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/jhollingworth/bootstrap-wysihtml5/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /jhollingworth/bootstrap-wysihtml5/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>178</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/jhollingworth/bootstrap-wysihtml5/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /jhollingworth/bootstrap-wysihtml5/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>41</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/jhollingworth/bootstrap-wysihtml5/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /jhollingworth/bootstrap-wysihtml5/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/jhollingworth/bootstrap-wysihtml5/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /jhollingworth/bootstrap-wysihtml5/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/jhollingworth/bootstrap-wysihtml5/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /jhollingworth/bootstrap-wysihtml5/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/jhollingworth/bootstrap-wysihtml5/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /jhollingworth/bootstrap-wysihtml5/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/jhollingworth/bootstrap-wysihtml5.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/jhollingworth/bootstrap-wysihtml5.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/jhollingworth/bootstrap-wysihtml5" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/jhollingworth/bootstrap-wysihtml5" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/jhollingworth/bootstrap-wysihtml5/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:347693d328e1b81b649599cde886c38c -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/jhollingworth/bootstrap-wysihtml5/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhollingworth/bootstrap-wysihtml5/blob/gh-pages/lib/js/prettify.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/jhollingworth/bootstrap-wysihtml5/blob/master/lib/js/prettify.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jhollingworth/bootstrap-wysihtml5" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">bootstrap-wysihtml5</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jhollingworth/bootstrap-wysihtml5/tree/master/lib" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/jhollingworth/bootstrap-wysihtml5/tree/master/lib/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">prettify.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="lib/js/prettify.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/jhollingworth/bootstrap-wysihtml5/contributors/master/lib/js/prettify.js">
    Fetching contributors…

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>29 lines (28 sloc)</span>
          <span class="meta-divider"></span>
        <span>13.632 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w"
               href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
              <a class="minibutton disabled tooltipped tooltipped-w" href="#"
                 aria-label="You must be signed in to make or propose changes">Edit</a>
          <a href="/jhollingworth/bootstrap-wysihtml5/raw/master/lib/js/prettify.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/jhollingworth/bootstrap-wysihtml5/blame/master/lib/js/prettify.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/jhollingworth/bootstrap-wysihtml5/commits/master/lib/js/prettify.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger disabled empty-icon tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR_SHOULD_USE_CONTINUATION</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC2'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">!==</span><span class="mi">92</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="s2">&quot;7&quot;</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="mi">8</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;u&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">16</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">32</span><span class="p">)</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">16</span><span class="o">?</span><span class="s2">&quot;\\x0&quot;</span><span class="o">:</span><span class="s2">&quot;\\x&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;\\&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;-&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;[&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;]&quot;</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC3'><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;^&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="sr">/\\[bdsw]/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;-&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">c</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">]);</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">65</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">122</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">65</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">90</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">65</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">|</span><span class="mi">32</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">90</span><span class="p">)</span><span class="o">|</span><span class="mi">32</span><span class="p">]),</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">97</span><span class="o">||</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">122</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">97</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">122</span><span class="p">)</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">]))}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]});</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="kc">NaN</span><span class="p">,</span><span class="kc">NaN</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;[&quot;</span><span class="p">];</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span></div><div class='line' id='LC4'><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])));</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;]&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;(&quot;</span><span class="o">?++</span><span class="nx">i</span><span class="o">:</span><span class="s2">&quot;\\&quot;</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=++</span><span class="nx">t</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">j</span><span class="o">===</span><span class="s2">&quot;(&quot;</span><span class="o">?</span><span class="p">(</span><span class="o">++</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;(?:&quot;</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;\\&quot;</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC5'><span class="p">(</span><span class="nx">j</span><span class="o">=+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;\\&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="s2">&quot;^&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;^&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;[&quot;</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;\\&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Za-z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;-</span><span class="mi">33</span><span class="p">,</span><span class="nx">a</span><span class="o">|</span><span class="mi">32</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">}));</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="p">)</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/[a-z]/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))){</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span></div><div class='line' id='LC6'><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">n</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="mi">13</span><span class="p">},</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">global</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">multiline</span><span class="p">)</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;(?:&quot;</span><span class="o">+</span><span class="nx">y</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;gi&quot;</span><span class="o">:</span><span class="s2">&quot;g&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">m</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;LI&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;\n&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="o">++</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">++&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">4</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r\n?/g</span><span class="p">,</span><span class="s2">&quot;\n&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\t\n\r ]+/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">y</span><span class="o">+=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span></div><div class='line' id='LC7'><span class="nx">t</span><span class="p">[</span><span class="nx">s</span><span class="o">++&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/(?:^|\s)nocode(?:\s|$)/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;white-space&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pre&quot;</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">:</span><span class="nx">t</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;pln&quot;</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="o">++</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span></div><div class='line' id='LC8'><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="nx">o</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;pln&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="s2">&quot;lang-&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">))</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;src&quot;</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)}</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">p</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">)}</span><span class="k">else</span> <span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">p</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">y</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span></div><div class='line' id='LC9'><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">--</span><span class="nx">k</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;)</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">k</span><span class="p">)]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">p</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">)}</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="sr">/[\S\s]/</span><span class="p">);</span><span class="nx">y</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">l</span><span class="p">)})();</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">tripleQuotedStrings</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;&#39;&#39;(?:[^&#39;\\]|\\[\S\s]|&#39;&#39;?(?=[^&#39;]))*(?:&#39;&#39;&#39;|$)|&quot;&quot;&quot;(?:[^&quot;\\]|\\[\S\s]|&quot;&quot;?(?=[^&quot;]))*(?:&quot;&quot;&quot;|$)|&#39;(?:[^&#39;\\]|\\[\S\s])*(?:&#39;|$)|&quot;(?:[^&quot;\\]|\\[\S\s])*(?:&quot;|$))/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;&#39;\&quot;&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">multiLineStrings</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;(?:[^&#39;\\]|\\[\S\s])*(?:&#39;|$)|&quot;(?:[^&quot;\\]|\\[\S\s])*(?:&quot;|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/</span><span class="p">,</span></div><div class='line' id='LC10'><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;&#39;\&quot;`&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^(?:&#39;(?:[^\n\r&#39;\\]|\\.)*(?:&#39;|$)|&quot;(?:[^\n\r&quot;\\]|\\.)*(?:&quot;|$))/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;\&quot;&#39;&quot;</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">verbatimStrings</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^@&quot;(?:[^&quot;]|&quot;&quot;)*(?:&quot;|$)/</span><span class="p">,</span><span class="nx">q</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hashComments</span><span class="p">;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">cStyleComments</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">])</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^&lt;(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)&gt;/</span><span class="p">,</span><span class="nx">q</span><span class="p">]))</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^#[^\n\r]*/</span><span class="p">,</span></div><div class='line' id='LC11'><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="p">]));</span><span class="nx">a</span><span class="p">.</span><span class="nx">cStyleComments</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^\/\/[^\n\r]*/</span><span class="p">,</span><span class="nx">q</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^\/\*[\S\s]*?(?:\*\/|$)/</span><span class="p">,</span><span class="nx">q</span><span class="p">]));</span><span class="nx">a</span><span class="p">.</span><span class="nx">regexLiterals</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;lang-regex&quot;</span><span class="p">,</span><span class="sr">/^(?:^^\.?|[!+-]|!=|!==|#|%|%=|&amp;|&amp;&amp;|&amp;&amp;=|&amp;=|\(|\*|\*=|\+=|,|-=|-&gt;|\/|\/=|:|::|;|&lt;|&lt;&lt;|&lt;&lt;=|&lt;=|=|==|===|&gt;|&gt;=|&gt;&gt;|&gt;&gt;=|&gt;&gt;&gt;|&gt;&gt;&gt;=|[?@[^]|\^=|\^\^|\^\^=|{|\||\|=|\|\||\|\|=|~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/</span><span class="p">]);(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">types</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;typ&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">]);</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">keywords</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^ | $/g</span><span class="p">,</span></div><div class='line' id='LC12'><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;kwd&quot;</span><span class="p">,</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(?:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\s,]+/g</span><span class="p">,</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)\\b&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot; \r\n\t\xa0&quot;</span><span class="p">]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span><span class="sr">/^@[$_a-z][\w$@]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;typ&quot;</span><span class="p">,</span><span class="sr">/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^[$_a-z][\w$@]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span><span class="sr">/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;0123456789&quot;</span><span class="p">],[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\\[\S\s]?/</span><span class="p">,</span><span class="nx">q</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^.[^\s\w&quot;-$&#39;./@\\`]*/</span><span class="p">,</span><span class="nx">q</span><span class="p">]);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;BR&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span></div><div class='line' id='LC13'><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">case</span> <span class="mi">4</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span><span class="nx">c</span><span class="p">;(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span></div><div class='line' id='LC14'><span class="k">for</span><span class="p">(;</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">;(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="sr">/(?:^|\s)nocode(?:\s|$)/</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="sr">/\r\n?|\n/</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;white-space&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pre&quot;</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;LI&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="nx">m</span><span class="o">===</span><span class="p">(</span><span class="nx">m</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;OL&quot;</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;linenums&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="o">|</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">l</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;L&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="nx">n</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;\xa0&quot;</span><span class="p">)),</span><span class="nx">r</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">--</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;cannot override language handler %s&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">A</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="sr">/^\s*&lt;/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;default-markup&quot;</span><span class="o">:</span><span class="s2">&quot;default-code&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">A</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC16'><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">)(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="sr">/\bMSIE\b/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="sr">/\n/g</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">])</span><span class="o">:</span><span class="nx">n</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">f</span><span class="p">;)</span><span class="nx">b</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">s</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">))){</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;\r&quot;</span><span class="p">));</span><span class="nx">i</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span></div><div class='line' id='LC17'><span class="nx">j</span><span class="p">;</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;SPAN&quot;</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">o</span><span class="p">)),</span><span class="nx">x</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">))}</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="mi">2</span><span class="p">);</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="mi">2</span><span class="p">)}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">stack</span><span class="o">?</span><span class="nx">w</span><span class="p">.</span><span class="nx">stack</span><span class="o">:</span><span class="nx">w</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;break,continue,do,else,for,if,return,while&quot;</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="p">[[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile&quot;</span><span class="p">],</span></div><div class='line' id='LC18'><span class="s2">&quot;catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof&quot;</span><span class="p">],</span><span class="nx">F</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where&quot;</span><span class="p">],</span><span class="nx">G</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient&quot;</span><span class="p">],</span></div><div class='line' id='LC19'><span class="nx">H</span><span class="o">=</span><span class="p">[</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var&quot;</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="p">[</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN&quot;</span><span class="p">],</span><span class="nx">I</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None&quot;</span><span class="p">],</span></div><div class='line' id='LC20'><span class="nx">J</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END&quot;</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">,</span><span class="s2">&quot;case,done,elif,esac,eval,fi,function,in,local,set,then,until&quot;</span><span class="p">],</span><span class="nx">K</span><span class="o">=</span><span class="sr">/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="sr">/\S/</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="p">[</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="s2">&quot;caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END&quot;</span><span class="o">+</span></div><div class='line' id='LC21'><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">v</span><span class="p">],</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">A</span><span class="o">=</span><span class="p">{};</span><span class="nx">k</span><span class="p">(</span><span class="nx">O</span><span class="p">,[</span><span class="s2">&quot;default-code&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^[^&lt;?]+/</span><span class="p">],[</span><span class="s2">&quot;dec&quot;</span><span class="p">,</span><span class="sr">/^&lt;!\w[^&gt;]*(?:&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="sr">/^&lt;\!--[\S\s]*?(?:--\&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;\?([\S\s]+?)(?:\?&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;%([\S\s]+?)(?:%&gt;|$)/</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^(?:&lt;[%?]|[%?]&gt;)/</span><span class="p">],[</span><span class="s2">&quot;lang-&quot;</span><span class="p">,</span><span class="sr">/^&lt;xmp\b[^&gt;]*&gt;([\S\s]+?)&lt;\/xmp\b[^&gt;]*&gt;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^&lt;script\b[^&gt;]*&gt;([\S\s]*?)(&lt;\/script\b[^&gt;]*&gt;)/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^&lt;style\b[^&gt;]*&gt;([\S\s]*?)(&lt;\/style\b[^&gt;]*&gt;)/i</span><span class="p">],[</span><span class="s2">&quot;lang-in.tag&quot;</span><span class="p">,</span><span class="sr">/^(&lt;\/?[a-z][^&lt;&gt;]*&gt;)/i</span><span class="p">]]),</span></div><div class='line' id='LC22'><span class="p">[</span><span class="s2">&quot;default-markup&quot;</span><span class="p">,</span><span class="s2">&quot;htm&quot;</span><span class="p">,</span><span class="s2">&quot;html&quot;</span><span class="p">,</span><span class="s2">&quot;mxml&quot;</span><span class="p">,</span><span class="s2">&quot;xhtml&quot;</span><span class="p">,</span><span class="s2">&quot;xml&quot;</span><span class="p">,</span><span class="s2">&quot;xsl&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([[</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot; \t\r\n&quot;</span><span class="p">],[</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="sr">/^(?:&quot;[^&quot;]*&quot;?|&#39;[^&#39;]*&#39;?)/</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;\&quot;&#39;&quot;</span><span class="p">]],[[</span><span class="s2">&quot;tag&quot;</span><span class="p">,</span><span class="sr">/^^&lt;\/?[a-z](?:[\w-.:]*\w)?|\/?&gt;$/i</span><span class="p">],[</span><span class="s2">&quot;atn&quot;</span><span class="p">,</span><span class="sr">/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i</span><span class="p">],[</span><span class="s2">&quot;lang-uq.val&quot;</span><span class="p">,</span><span class="sr">/^=\s*([^\s&quot;&#39;&gt;]*(?:[^\s&quot;&#39;/&gt;]|\/(?=\s)))/</span><span class="p">],[</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="sr">/^[/&lt;-&gt;]+/</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*&quot;([^&quot;]+)&quot;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*&#39;([^&#39;]+)&#39;/i</span><span class="p">],[</span><span class="s2">&quot;lang-js&quot;</span><span class="p">,</span><span class="sr">/^on\w+\s*=\s*([^\s&quot;&#39;&gt;]+)/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^style\s*=\s*&quot;([^&quot;]+)&quot;/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span><span class="sr">/^style\s*=\s*&#39;([^&#39;]+)&#39;/i</span><span class="p">],[</span><span class="s2">&quot;lang-css&quot;</span><span class="p">,</span></div><div class='line' id='LC23'><span class="sr">/^style\s*=\s*([^\s&quot;&#39;&gt;]+)/i</span><span class="p">]]),[</span><span class="s2">&quot;in.tag&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="sr">/^[\S\s]+/</span><span class="p">]]),[</span><span class="s2">&quot;uq.val&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">F</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">types</span><span class="o">:</span><span class="nx">K</span><span class="p">}),[</span><span class="s2">&quot;c&quot;</span><span class="p">,</span><span class="s2">&quot;cc&quot;</span><span class="p">,</span><span class="s2">&quot;cpp&quot;</span><span class="p">,</span><span class="s2">&quot;cxx&quot;</span><span class="p">,</span><span class="s2">&quot;cyc&quot;</span><span class="p">,</span><span class="s2">&quot;m&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;null,true,false&quot;</span><span class="p">}),[</span><span class="s2">&quot;json&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">verbatimStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">types</span><span class="o">:</span><span class="nx">K</span><span class="p">}),[</span><span class="s2">&quot;cs&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;java&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;bsh&quot;</span><span class="p">,</span><span class="s2">&quot;csh&quot;</span><span class="p">,</span><span class="s2">&quot;sh&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">I</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tripleQuotedStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span></div><div class='line' id='LC24'><span class="p">[</span><span class="s2">&quot;cv&quot;</span><span class="p">,</span><span class="s2">&quot;py&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END&quot;</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;perl&quot;</span><span class="p">,</span><span class="s2">&quot;pl&quot;</span><span class="p">,</span><span class="s2">&quot;pm&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">J</span><span class="p">,</span><span class="nx">hashComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multiLineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;rb&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;js&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">u</span><span class="p">({</span><span class="nx">keywords</span><span class="o">:</span><span class="s2">&quot;all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes&quot;</span><span class="p">,</span></div><div class='line' id='LC25'><span class="nx">hashComments</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">cStyleComments</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">multilineStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tripleQuotedStrings</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">regexLiterals</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),[</span><span class="s2">&quot;coffee&quot;</span><span class="p">]);</span><span class="nx">k</span><span class="p">(</span><span class="nx">x</span><span class="p">([],[[</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="sr">/^[\S\s]+/</span><span class="p">]]),[</span><span class="s2">&quot;regex&quot;</span><span class="p">]);</span><span class="nb">window</span><span class="p">.</span><span class="nx">prettyPrintOne</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;PRE&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">E</span><span class="p">({</span><span class="nx">g</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">h</span><span class="p">});</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">};</span><span class="nb">window</span><span class="p">.</span><span class="nx">prettyPrint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR_SHOULD_USE_CONTINUATION</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">+</span><span class="mi">250</span><span class="o">:</span><span class="kc">Infinity</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">className</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;prettyprint&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC26'><span class="o">!</span><span class="nx">k</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">o</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="o">:</span><span class="nx">i</span><span class="o">===</span><span class="mi">3</span><span class="o">?</span><span class="nx">N</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">o</span><span class="o">:</span><span class="nx">o</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">o</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">o</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;CODE&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">tagName</span><span class="p">}</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">o</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">if</span><span class="p">((</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;pre&quot;</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;code&quot;</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;xmp&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;prettyprint&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">||</span><span class="p">((</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\blinenums\b(?::(\d+))?/</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">?+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">g</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">))}}</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span></div><div class='line' id='LC27'><span class="mi">250</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">()}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;pre&quot;</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;code&quot;</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;xmp&quot;</span><span class="p">)],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">k</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="o">++</span><span class="nx">t</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">][</span><span class="nx">t</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nb">Date</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">now</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/\blang(?:uage)?-([\w.]+)(?!\S)/</span><span class="p">;</span><span class="nx">m</span><span class="p">()};</span><span class="nb">window</span><span class="p">.</span><span class="nx">PR</span><span class="o">=</span><span class="p">{</span><span class="nx">createSimpleLexer</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">registerLangHandler</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">sourceDecorator</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">PR_ATTRIB_NAME</span><span class="o">:</span><span class="s2">&quot;atn&quot;</span><span class="p">,</span><span class="nx">PR_ATTRIB_VALUE</span><span class="o">:</span><span class="s2">&quot;atv&quot;</span><span class="p">,</span><span class="nx">PR_COMMENT</span><span class="o">:</span><span class="s2">&quot;com&quot;</span><span class="p">,</span><span class="nx">PR_DECLARATION</span><span class="o">:</span><span class="s2">&quot;dec&quot;</span><span class="p">,</span><span class="nx">PR_KEYWORD</span><span class="o">:</span><span class="s2">&quot;kwd&quot;</span><span class="p">,</span><span class="nx">PR_LITERAL</span><span class="o">:</span><span class="s2">&quot;lit&quot;</span><span class="p">,</span></div><div class='line' id='LC28'><span class="nx">PR_NOCODE</span><span class="o">:</span><span class="s2">&quot;nocode&quot;</span><span class="p">,</span><span class="nx">PR_PLAIN</span><span class="o">:</span><span class="s2">&quot;pln&quot;</span><span class="p">,</span><span class="nx">PR_PUNCTUATION</span><span class="o">:</span><span class="s2">&quot;pun&quot;</span><span class="p">,</span><span class="nx">PR_SOURCE</span><span class="o">:</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">PR_STRING</span><span class="o">:</span><span class="s2">&quot;str&quot;</span><span class="p">,</span><span class="nx">PR_TAG</span><span class="o">:</span><span class="s2">&quot;tag&quot;</span><span class="p">,</span><span class="nx">PR_TYPE</span><span class="o">:</span><span class="s2">&quot;typ&quot;</span><span class="p">}})();</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.11191s from github-fe135-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

